/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.istloja.vistas;

import com.istloja.controlador.Cancionesbd;
import com.istloja.controlador.Discografiabd;
import com.istloja.controlador.PlaylistAgregadobd;
import com.istloja.modelTables.ModelTableCanciones;
import com.istloja.modelo.Canciones;
import com.istloja.modelo.Discografica;
import com.istloja.utilidad.Utilidades;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import com.istloja.modelTables.ComunicacionVistaModelosTablas;
import com.istloja.modelTables.ModelTableDiscografica;
import com.istloja.modelTables.ModelTablePlaylistAgregado;
import com.istloja.modelo.PlaylistAgregado;
import java.util.Date;

public class GestionMusica extends javax.swing.JFrame implements ComunicacionVistaModelosTablas {

    private Utilidades utilidades;
    private Cancionesbd controladorCanciones;
    private PlaylistAgregadobd  controladorPlaylistAgregar;
    private Discografiabd controladorDiscografica;
    private Canciones CancionesEditar;
    private PlaylistAgregado PlaylistAgregarEditar; 
    private GestionCanciones gestionCanciones;
    private GestionDiscograficas gestionDiscograficas;
    private GestionPlaylistAgregado gestionPlaylistAgregado;
    private ModelTableCanciones modelTableCanciones;
    private ModelTableDiscografica modelTableDiscografica;
    private ModelTablePlaylistAgregado modelTablePlaylistAgregado;
    
     
    private Discografica DiscograficaSeleccionada;

//    private ModelTableVentas modelTableVentas;

    /**
     * Creates new form GestionPersonaV1
     */
    public GestionMusica() {
        controladorCanciones = new Cancionesbd();
        controladorDiscografica = new Discografiabd();
        controladorPlaylistAgregar = new PlaylistAgregadobd();
        modelTableCanciones = new ModelTableCanciones(controladorCanciones.obtenerCanciones(), this);
        modelTableDiscografica = new ModelTableDiscografica(controladorDiscografica.obtenerDiscografias(), this);
        modelTablePlaylistAgregado = new ModelTablePlaylistAgregado(controladorPlaylistAgregar.obtenerPlaylistAgregado(), this);

        initComponents();
        utilidades = new Utilidades();
        setLocationRelativeTo(null);
        gestionCanciones = new GestionCanciones(txtTitulo, txtArtista, txtGrupo, txtAlbum, jDatePublicacion, txtGenero, txtDuracion, utilidades, this, jDateFechaRegistro);
        gestionDiscograficas = new GestionDiscograficas(txtNombreDiscografica, jComboFormatoDiscografica, jComboPlataformaDiscografica, jComboTipoCompañiaDiscografica, jComboCopyDiscografica, utilidades, this, jDateFechaDiscografica);
        gestionPlaylistAgregado = new GestionPlaylistAgregado(txtNombrePlaylist, txtTituloCancion, txtArtistaPlaylist, txtAlbumPlaylist, txtGeneroPlaylist, txtDuracionPlaylist,utilidades,this,txtNombreDiscograficaPlaylist,txtCopyPlaylist);

    }

    public void EditarCanciones() {
        if (CancionesEditar == null) {
            JOptionPane.showMessageDialog(rootPane, "No hay una cancion seleccionada para editar", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Canciones CancionesEditar = gestionCanciones.guardarEditar(true);
        if (CancionesEditar != null) {
            CancionesEditar.setFechaRegistro(CancionesEditar.getFechaRegistro());
            CancionesEditar.setIdCanciones(CancionesEditar.getIdCanciones());
            if (controladorCanciones.actualizarCanciones(CancionesEditar)) {
                JOptionPane.showMessageDialog(rootPane, "Cancion editada con exito del sitema.");
                gestionCanciones.limpiarCamposCanciones();
                CancionesEditar = null;
                actulizarTodalatablaCanciones();
            } else {
                JOptionPane.showMessageDialog(rootPane, "No se puede editar la cancion", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        tabCanciones = new javax.swing.JTabbedPane();
        panelCanciones = new javax.swing.JPanel();
        txtTituloCliente = new javax.swing.JLabel();
        panelCuerpoRegistro = new javax.swing.JPanel();
        lblCedula = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lblApellido = new javax.swing.JLabel();
        lblDireccion = new javax.swing.JLabel();
        lblTelefono = new javax.swing.JLabel();
        lblCorreo = new javax.swing.JLabel();
        txtTitulo = new javax.swing.JTextField();
        txtArtista = new javax.swing.JTextField();
        txtGrupo = new javax.swing.JTextField();
        txtAlbum = new javax.swing.JTextField();
        txtGenero = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtDuracion = new javax.swing.JTextField();
        jDatePublicacion = new com.toedter.calendar.JDateChooser();
        jDateFechaRegistro = new com.toedter.calendar.JDateChooser();
        btnGuardarCanciones = new javax.swing.JButton();
        btnEditarCanciones = new javax.swing.JButton();
        btnEliminarCanciones = new javax.swing.JButton();
        btnTraerCanciones = new javax.swing.JButton();
        btnLimpiarCanciones = new javax.swing.JButton();
        jScrollCliente = new javax.swing.JScrollPane();
        tablaCliente = new javax.swing.JTable();
        lblBuscarCancion = new javax.swing.JLabel();
        comboParametroBusqueda = new javax.swing.JComboBox<>();
        txtParametroBusquedaCancion = new javax.swing.JTextField();
        btnBuscarCancion = new javax.swing.JButton();
        panelDiscografia = new javax.swing.JPanel();
        txtTituloInventario = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtNombreDiscografica = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jDateFechaDiscografica = new com.toedter.calendar.JDateChooser();
        jLabel27 = new javax.swing.JLabel();
        jComboFormatoDiscografica = new javax.swing.JComboBox<>();
        jComboPlataformaDiscografica = new javax.swing.JComboBox<>();
        jComboTipoCompañiaDiscografica = new javax.swing.JComboBox<>();
        jComboCopyDiscografica = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        comboParametroBusquedaDiscografica = new javax.swing.JComboBox<>();
        txtParametroBusquedaInventario = new javax.swing.JTextField();
        btnBuscarDiscografica = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnGuardarDiscografica = new javax.swing.JButton();
        btnEditarDiscografica = new javax.swing.JButton();
        btnEliminarDiscografica = new javax.swing.JButton();
        btnTraerDiscografica = new javax.swing.JButton();
        btnLimpiarDiscografica = new javax.swing.JButton();
        panelPlaylist = new javax.swing.JPanel();
        jPanelPlaylist1 = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        txtNombrePlaylist = new javax.swing.JTextField();
        txtTituloCancion = new javax.swing.JTextField();
        txtNombreDiscograficaPlaylist = new javax.swing.JTextField();
        txtGeneroPlaylist = new javax.swing.JTextField();
        txtDuracionPlaylist = new javax.swing.JTextField();
        txtAlbumPlaylist = new javax.swing.JTextField();
        ButtonListaPlaylist = new javax.swing.JButton();
        txtArtistaPlaylist = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnAgregarPlaylist = new javax.swing.JButton();
        txtCopyPlaylist = new javax.swing.JTextField();
        ButtonGuardarPlaylist = new javax.swing.JButton();
        ButtonEliminarPlaylist = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        TablePlaylist = new javax.swing.JTable();
        jLabel41 = new javax.swing.JLabel();
        menuGeneral = new javax.swing.JMenuBar();
        menuArchivo = new javax.swing.JMenu();
        menuSalir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        menuBuscarPersona = new javax.swing.JMenuItem();
        menuEditar = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestion Personas");
        setResizable(false);

        txtTituloCliente.setBackground(new java.awt.Color(255, 153, 153));
        txtTituloCliente.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtTituloCliente.setText("Resgistro Canciones");
        txtTituloCliente.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        panelCuerpoRegistro.setBorder(javax.swing.BorderFactory.createTitledBorder("Cuerpo Registro"));

        lblCedula.setText("Titulo:");

        lblNombre.setText("Artista:");

        lblApellido.setText("Grupo:");

        lblDireccion.setText("Album:");

        lblTelefono.setText("Publicacion:");

        lblCorreo.setText("Genero:");

        txtTitulo.setToolTipText("Ingrese una cédula correcta.");

        jLabel15.setText("Fecha Registro: ");

        jLabel1.setText("Duracion:");

        txtDuracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDuracionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelCuerpoRegistroLayout = new javax.swing.GroupLayout(panelCuerpoRegistro);
        panelCuerpoRegistro.setLayout(panelCuerpoRegistroLayout);
        panelCuerpoRegistroLayout.setHorizontalGroup(
            panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCuerpoRegistroLayout.createSequentialGroup()
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelCuerpoRegistroLayout.createSequentialGroup()
                        .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelCuerpoRegistroLayout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblNombre)
                                    .addComponent(lblApellido)
                                    .addComponent(lblDireccion)
                                    .addComponent(lblTelefono)
                                    .addComponent(lblCorreo))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCuerpoRegistroLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCuerpoRegistroLayout.createSequentialGroup()
                                        .addComponent(lblCedula)
                                        .addGap(12, 12, 12))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCuerpoRegistroLayout.createSequentialGroup()
                                        .addComponent(jLabel15)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))))
                        .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtArtista)
                            .addComponent(txtGenero)
                            .addComponent(txtAlbum)
                            .addComponent(txtGrupo)
                            .addComponent(txtTitulo)
                            .addComponent(jDatePublicacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jDateFechaRegistro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(panelCuerpoRegistroLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtDuracion, javax.swing.GroupLayout.PREFERRED_SIZE, 754, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(301, 301, 301))
        );
        panelCuerpoRegistroLayout.setVerticalGroup(
            panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCuerpoRegistroLayout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCedula))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(txtArtista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblApellido))
                .addGap(18, 18, 18)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDireccion)
                    .addComponent(txtAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTelefono)
                    .addComponent(jDatePublicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCorreo)
                    .addComponent(txtGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtDuracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jDateFechaRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        btnGuardarCanciones.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istloja/resource/img/guardar-el-archivo.png"))); // NOI18N
        btnGuardarCanciones.setText("Guardar");
        btnGuardarCanciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarCancionesActionPerformed(evt);
            }
        });

        btnEditarCanciones.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istloja/resource/img/actualizar.png"))); // NOI18N
        btnEditarCanciones.setText("Editar");
        btnEditarCanciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarCancionesActionPerformed(evt);
            }
        });

        btnEliminarCanciones.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istloja/resource/img/eliminar.png"))); // NOI18N
        btnEliminarCanciones.setText("Eliminar");
        btnEliminarCanciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarCancionesActionPerformed(evt);
            }
        });

        btnTraerCanciones.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istloja/resource/img/frente.png"))); // NOI18N
        btnTraerCanciones.setText("Traer");
        btnTraerCanciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraerCancionesActionPerformed(evt);
            }
        });

        btnLimpiarCanciones.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istloja/resource/img/escoba.png"))); // NOI18N
        btnLimpiarCanciones.setText("Limpiar Formulario");
        btnLimpiarCanciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarCancionesActionPerformed(evt);
            }
        });

        tablaCliente.setModel(modelTableCanciones);
        jScrollCliente.setViewportView(tablaCliente);

        lblBuscarCancion.setText("Buscar Cancion");

        comboParametroBusqueda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Titulo", "Artista", "Grupo", "Album" }));
        comboParametroBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboParametroBusquedaActionPerformed(evt);
            }
        });

        txtParametroBusquedaCancion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtParametroBusquedaCancionActionPerformed(evt);
            }
        });
        txtParametroBusquedaCancion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtParametroBusquedaCancionKeyReleased(evt);
            }
        });

        btnBuscarCancion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istloja/resource/img/buscando-vidrio.png"))); // NOI18N
        btnBuscarCancion.setText("Buscar");
        btnBuscarCancion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCancionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelCancionesLayout = new javax.swing.GroupLayout(panelCanciones);
        panelCanciones.setLayout(panelCancionesLayout);
        panelCancionesLayout.setHorizontalGroup(
            panelCancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCancionesLayout.createSequentialGroup()
                .addGroup(panelCancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCancionesLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(txtTituloCliente))
                    .addGroup(panelCancionesLayout.createSequentialGroup()
                        .addGroup(panelCancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelCancionesLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblBuscarCancion)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(comboParametroBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelCancionesLayout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addComponent(btnGuardarCanciones)))
                        .addGroup(panelCancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelCancionesLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtParametroBusquedaCancion, javax.swing.GroupLayout.PREFERRED_SIZE, 661, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(btnBuscarCancion))
                            .addGroup(panelCancionesLayout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(btnEditarCanciones)
                                .addGap(38, 38, 38)
                                .addComponent(btnEliminarCanciones)
                                .addGap(30, 30, 30)
                                .addComponent(btnTraerCanciones)
                                .addGap(41, 41, 41)
                                .addComponent(btnLimpiarCanciones))))
                    .addGroup(panelCancionesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 1028, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelCancionesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panelCuerpoRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        panelCancionesLayout.setVerticalGroup(
            panelCancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCancionesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTituloCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelCuerpoRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelCancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardarCanciones)
                    .addComponent(btnEditarCanciones)
                    .addComponent(btnEliminarCanciones)
                    .addComponent(btnTraerCanciones)
                    .addComponent(btnLimpiarCanciones))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCancionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBuscarCancion)
                    .addComponent(comboParametroBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtParametroBusquedaCancion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarCancion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabCanciones.addTab("Canciones", panelCanciones);

        panelDiscografia.setForeground(new java.awt.Color(153, 153, 255));

        txtTituloInventario.setBackground(new java.awt.Color(255, 153, 153));
        txtTituloInventario.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtTituloInventario.setText("Resgistro Discografica");
        txtTituloInventario.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel2.setForeground(new java.awt.Color(153, 153, 255));

        jLabel11.setText("Tipo deCompañia:");

        jLabel10.setText("Formato:");

        jLabel9.setText("Nombre:");

        jLabel18.setText("Copyright:");

        jLabel22.setText("FechaRegistro:");

        jLabel27.setText("Plataforma:");

        jComboFormatoDiscografica.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cassette de edición limitada", "Vinilo de edición limitada", "Distribución digital", "CD", " " }));

        jComboPlataformaDiscografica.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SoudCloud", "Bandcamp ", "Discogs", " " }));

        jComboTipoCompañiaDiscografica.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Propietario", "comunidad de bienes ", "SL", " " }));

        jComboCopyDiscografica.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "La composición", "La grabación sonora" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel10)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNombreDiscografica, javax.swing.GroupLayout.PREFERRED_SIZE, 802, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jComboFormatoDiscografica, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboTipoCompañiaDiscografica, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(114, 114, 114)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel27)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboPlataformaDiscografica, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboCopyDiscografica, 0, 158, Short.MAX_VALUE)))
                    .addComponent(jDateFechaDiscografica, javax.swing.GroupLayout.PREFERRED_SIZE, 802, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNombreDiscografica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jComboFormatoDiscografica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27)
                    .addComponent(jComboPlataformaDiscografica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jComboTipoCompañiaDiscografica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboCopyDiscografica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel22)
                    .addComponent(jDateFechaDiscografica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jLabel14.setText("Buscador");

        comboParametroBusquedaDiscografica.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nombre" }));
        comboParametroBusquedaDiscografica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboParametroBusquedaDiscograficaActionPerformed(evt);
            }
        });

        btnBuscarDiscografica.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istloja/resource/img/buscando-vidrio.png"))); // NOI18N
        btnBuscarDiscografica.setText("Buscar Inventario");
        btnBuscarDiscografica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarDiscograficaActionPerformed(evt);
            }
        });

        jTable1.setModel(modelTableDiscografica);
        jScrollPane2.setViewportView(jTable1);

        btnGuardarDiscografica.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istloja/resource/img/guardar-el-archivo.png"))); // NOI18N
        btnGuardarDiscografica.setText("Guardar");
        btnGuardarDiscografica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarDiscograficaActionPerformed(evt);
            }
        });

        btnEditarDiscografica.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istloja/resource/img/actualizar.png"))); // NOI18N
        btnEditarDiscografica.setText("Editar");
        btnEditarDiscografica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarDiscograficaActionPerformed(evt);
            }
        });

        btnEliminarDiscografica.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istloja/resource/img/eliminar.png"))); // NOI18N
        btnEliminarDiscografica.setText("Eliminar");
        btnEliminarDiscografica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarDiscograficaActionPerformed(evt);
            }
        });

        btnTraerDiscografica.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istloja/resource/img/frente.png"))); // NOI18N
        btnTraerDiscografica.setText("Traer");
        btnTraerDiscografica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraerDiscograficaActionPerformed(evt);
            }
        });

        btnLimpiarDiscografica.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istloja/resource/img/escoba.png"))); // NOI18N
        btnLimpiarDiscografica.setText("Limpiar Formulario");
        btnLimpiarDiscografica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarDiscograficaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDiscografiaLayout = new javax.swing.GroupLayout(panelDiscografia);
        panelDiscografia.setLayout(panelDiscografiaLayout);
        panelDiscografiaLayout.setHorizontalGroup(
            panelDiscografiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDiscografiaLayout.createSequentialGroup()
                .addGroup(panelDiscografiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDiscografiaLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(panelDiscografiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelDiscografiaLayout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(txtTituloInventario))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelDiscografiaLayout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(18, 18, 18)
                                .addComponent(comboParametroBusquedaDiscografica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtParametroBusquedaInventario, javax.swing.GroupLayout.PREFERRED_SIZE, 656, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnBuscarDiscografica))
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1049, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelDiscografiaLayout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(btnGuardarDiscografica)
                        .addGap(66, 66, 66)
                        .addComponent(btnEditarDiscografica)
                        .addGap(58, 58, 58)
                        .addComponent(btnEliminarDiscografica)
                        .addGap(46, 46, 46)
                        .addComponent(btnTraerDiscografica)
                        .addGap(60, 60, 60)
                        .addComponent(btnLimpiarDiscografica)))
                .addContainerGap(138, Short.MAX_VALUE))
        );
        panelDiscografiaLayout.setVerticalGroup(
            panelDiscografiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDiscografiaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTituloInventario)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDiscografiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardarDiscografica)
                    .addComponent(btnEditarDiscografica)
                    .addComponent(btnEliminarDiscografica)
                    .addComponent(btnTraerDiscografica)
                    .addComponent(btnLimpiarDiscografica))
                .addGap(3, 3, 3)
                .addGroup(panelDiscografiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(comboParametroBusquedaDiscografica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtParametroBusquedaInventario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarDiscografica))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(178, Short.MAX_VALUE))
        );

        jPanel2.getAccessibleContext().setAccessibleName("Inventario");
        jPanel2.getAccessibleContext().setAccessibleDescription("");

        tabCanciones.addTab("Discografica", panelDiscografia);

        jPanelPlaylist1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel42.setText("Nombre del Playlist:");

        jLabel43.setText("Nombre de la cancion:");

        jLabel44.setText("Artista:");

        jLabel45.setText("Genero:");

        jLabel46.setText("Album:");

        jLabel47.setText("Duracion:");

        jLabel48.setText("Nombre Discografica:");

        txtTituloCancion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTituloCancionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCedulaoRucClienteVentasFocusLost(evt);
            }
        });

        txtNombreDiscograficaPlaylist.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombreDiscograficaPlaylistFocusLost(evt);
            }
        });
        txtNombreDiscograficaPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProductoVentasActionPerformed(evt);
            }
        });

        txtGeneroPlaylist.setEditable(false);
        txtGeneroPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGeneroPlaylistActionPerformed(evt);
            }
        });

        txtDuracionPlaylist.setEditable(false);
        txtDuracionPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaVentaVentasActionPerformed(evt);
            }
        });

        txtAlbumPlaylist.setEditable(false);

        ButtonListaPlaylist.setText("Lista Canciones");
        ButtonListaPlaylist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        txtArtistaPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel2.setText("CopyRight");

        btnAgregarPlaylist.setText("Agregar");
        btnAgregarPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarPlaylistActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelPlaylist1Layout = new javax.swing.GroupLayout(jPanelPlaylist1);
        jPanelPlaylist1.setLayout(jPanelPlaylist1Layout);
        jPanelPlaylist1Layout.setHorizontalGroup(
            jPanelPlaylist1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPlaylist1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanelPlaylist1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPlaylist1Layout.createSequentialGroup()
                        .addGroup(jPanelPlaylist1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel48)
                            .addComponent(jLabel45)
                            .addComponent(jLabel44)
                            .addComponent(jLabel43))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelPlaylist1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelPlaylist1Layout.createSequentialGroup()
                                .addGroup(jPanelPlaylist1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtArtistaPlaylist)
                                    .addComponent(txtGeneroPlaylist, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanelPlaylist1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel47, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel46, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelPlaylist1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtDuracionPlaylist, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                                    .addComponent(txtAlbumPlaylist))
                                .addGap(27, 27, 27)
                                .addComponent(ButtonListaPlaylist)
                                .addGap(171, 171, 171))
                            .addGroup(jPanelPlaylist1Layout.createSequentialGroup()
                                .addGroup(jPanelPlaylist1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTituloCancion, javax.swing.GroupLayout.PREFERRED_SIZE, 711, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanelPlaylist1Layout.createSequentialGroup()
                                        .addComponent(txtNombreDiscograficaPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 628, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnAgregarPlaylist)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanelPlaylist1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel42)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombrePlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 713, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(jPanelPlaylist1Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtCopyPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 629, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanelPlaylist1Layout.setVerticalGroup(
            jPanelPlaylist1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPlaylist1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanelPlaylist1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42)
                    .addComponent(txtNombrePlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanelPlaylist1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43)
                    .addComponent(txtTituloCancion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelPlaylist1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtArtistaPlaylist, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelPlaylist1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel44)
                        .addComponent(jLabel46)
                        .addComponent(txtAlbumPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ButtonListaPlaylist)))
                .addGap(18, 18, 18)
                .addGroup(jPanelPlaylist1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel45)
                    .addComponent(jLabel47)
                    .addComponent(txtDuracionPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGeneroPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanelPlaylist1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel48)
                    .addComponent(txtNombreDiscograficaPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregarPlaylist))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelPlaylist1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCopyPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        ButtonGuardarPlaylist.setText("Guardar");
        ButtonGuardarPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        ButtonEliminarPlaylist.setText("Eliminar");
        ButtonEliminarPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        TablePlaylist.setModel(modelTablePlaylistAgregado);
        jScrollPane7.setViewportView(TablePlaylist);

        jLabel41.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel41.setText("Creacion Playlist");

        javax.swing.GroupLayout panelPlaylistLayout = new javax.swing.GroupLayout(panelPlaylist);
        panelPlaylist.setLayout(panelPlaylistLayout);
        panelPlaylistLayout.setHorizontalGroup(
            panelPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPlaylistLayout.createSequentialGroup()
                .addGroup(panelPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelPlaylistLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel41))
                    .addGroup(panelPlaylistLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanelPlaylist1, javax.swing.GroupLayout.PREFERRED_SIZE, 917, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelPlaylistLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane7)))
                .addContainerGap(282, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPlaylistLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(ButtonGuardarPlaylist)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ButtonEliminarPlaylist)
                .addGap(437, 437, 437))
        );
        panelPlaylistLayout.setVerticalGroup(
            panelPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPlaylistLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel41)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelPlaylist1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonGuardarPlaylist)
                    .addComponent(ButtonEliminarPlaylist))
                .addContainerGap(192, Short.MAX_VALUE))
        );

        tabCanciones.addTab("Playlist", panelPlaylist);

        menuArchivo.setText("Archivo");

        menuSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        menuSalir.setText("Salir");
        menuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSalirActionPerformed(evt);
            }
        });
        menuArchivo.add(menuSalir);

        jMenu2.setText("Acciones Persona");

        menuBuscarPersona.setText("Buscar");
        menuBuscarPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBuscarPersonaActionPerformed(evt);
            }
        });
        jMenu2.add(menuBuscarPersona);

        menuArchivo.add(jMenu2);

        menuGeneral.add(menuArchivo);

        menuEditar.setText("Editar");
        menuGeneral.add(menuEditar);

        jMenu1.setText("Acerca de");
        menuGeneral.add(jMenu1);

        setJMenuBar(menuGeneral);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabCanciones)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabCanciones, javax.swing.GroupLayout.PREFERRED_SIZE, 741, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void actulizarTodalatablaCanciones() {
        modelTableCanciones.setCanciones(controladorCanciones.obtenerCanciones());
        modelTableCanciones.fireTableDataChanged();

    }

    public void actualizarDiscografia() {
        List<Discografica> invent = controladorDiscografica.obtenerDiscografias();
        modelTableDiscografica.setDiscografica(invent);
        modelTableDiscografica.fireTableDataChanged();
    }

    public void guardarDiscografica() {
        Discografica inventarioGuardar = gestionDiscograficas.guardarEditarDiscografias(false);
        if (jDateFechaDiscografica.getDate() != null) {
            inventarioGuardar.setFecha_registro(jDateFechaDiscografica.getDate());
        }
        if (inventarioGuardar != null) {
            if (controladorDiscografica.registrarDiscografia(inventarioGuardar)) {
                JOptionPane.showMessageDialog(rootPane, "Inventario registrada en el sistema.");
                gestionDiscograficas.limpiarDiscografia();
                actualizarDiscografia();

            } else {
                JOptionPane.showMessageDialog(rootPane, "No se puede guardar la persona", "ERROR", JOptionPane.ERROR_MESSAGE);

            }
        }
    }

    public void editarDiscograficas() {
        if (DiscograficaSeleccionada == null) {
            JOptionPane.showMessageDialog(rootPane, "No hay una Discografica seleccionada para editar", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Discografica invent = gestionDiscograficas.guardarEditarDiscografias(true);
        if (invent != null) {
            invent.setFecha_registro(DiscograficaSeleccionada.getFecha_registro());
            invent.setIdDiscografica(DiscograficaSeleccionada.getIdDiscografica());
            if (controladorDiscografica.actualizarDiscografica(invent)) {
                JOptionPane.showMessageDialog(rootPane, "Discografica editado con exito del sitema.");
                gestionDiscograficas.limpiarDiscografia();
                DiscograficaSeleccionada = null;
            } else {
                JOptionPane.showMessageDialog(rootPane, "No se puede editar la comàñia discografica", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    public void eliminarDiscografica() {
        if (DiscograficaSeleccionada != null) {
            DiscograficaSeleccionada.setIdDiscografica(DiscograficaSeleccionada.getIdDiscografica());
            if (controladorDiscografica.eliminarDiscografica(DiscograficaSeleccionada)) {
                JOptionPane.showMessageDialog(rootPane, "Discografica eliminada con exito del sitema.");
                gestionDiscograficas.limpiarDiscografia();
            } else {
                JOptionPane.showMessageDialog(rootPane, "No se puede eliminar la Discografica", "ERROR", JOptionPane.ERROR_MESSAGE);

            }
        }

    }


    private void menuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSalirActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_menuSalirActionPerformed

    private void menuBuscarPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBuscarPersonaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuBuscarPersonaActionPerformed


    private void btnLimpiarDiscograficaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarDiscograficaActionPerformed
        // TODO add your handling code here:
        gestionDiscograficas.limpiarDiscografia();
    }//GEN-LAST:event_btnLimpiarDiscograficaActionPerformed
    public void traerUltimaDiscografica() {

        List<Discografica> obtenerDiscografias = controladorDiscografica.obtenerDiscografias();
        DiscograficaSeleccionada = obtenerDiscografias.get(obtenerDiscografias.size() - 1);
        txtNombreDiscografica.setText(DiscograficaSeleccionada.getNombre());
        jComboFormatoDiscografica.setSelectedIndex(DiscograficaSeleccionada.getFormato());
        jComboPlataformaDiscografica.setSelectedIndex(DiscograficaSeleccionada.getPlataforma());
        jComboTipoCompañiaDiscografica.setSelectedIndex(DiscograficaSeleccionada.getTipoCompañia());
        jComboCopyDiscografica.setSelectedIndex(DiscograficaSeleccionada.getCopyright());
        jDateFechaDiscografica.setDate(DiscograficaSeleccionada.getFecha_registro());
    }

    private void btnTraerDiscograficaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraerDiscograficaActionPerformed
        // TODO add your handling code here:
        traerUltimaDiscografica();

    }//GEN-LAST:event_btnTraerDiscograficaActionPerformed

    private void btnEliminarDiscograficaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarDiscograficaActionPerformed

        eliminarDiscografica();
        actualizarDiscografia();
    }//GEN-LAST:event_btnEliminarDiscograficaActionPerformed

    private void btnEditarDiscograficaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarDiscograficaActionPerformed
        editarDiscograficas();
        actualizarDiscografia();
    }//GEN-LAST:event_btnEditarDiscograficaActionPerformed

    private void btnGuardarDiscograficaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarDiscograficaActionPerformed
        guardarDiscografica();
        actualizarDiscografia();
    }//GEN-LAST:event_btnGuardarDiscograficaActionPerformed

    private void btnBuscarDiscograficaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarDiscograficaActionPerformed

//        System.out.println("Combo" + comboParametroBusquedaDiscografica.getSelectedIndex());
//        switch (comboParametroBusquedaDiscografica.getSelectedIndex()) {
//            case 0://Codigo
//                modelTableInventario.setInventarios(controladorInventario.ObtenerCodigo_pro(txtParametroBusquedaInventario.getText()));
//                modelTableInventario.fireTableDataChanged();
//                break;
//            case 1://7Descripcion
//                modelTableInventario.setInventarios(controladorInventario.obtenerProductosInventarioDescripcion(txtParametroBusquedaInventario.getText()));
//                modelTableInventario.fireTableDataChanged();
//                break;
//        }
    }//GEN-LAST:event_btnBuscarDiscograficaActionPerformed

    private void comboParametroBusquedaDiscograficaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboParametroBusquedaDiscograficaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboParametroBusquedaDiscograficaActionPerformed

    private void btnBuscarCancionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCancionActionPerformed

        System.out.println("Combo" + comboParametroBusqueda.getSelectedIndex());
        switch (comboParametroBusqueda.getSelectedIndex()) {
            case 0:
                modelTableCanciones.setCanciones(controladorCanciones.getCancionTituloListo(txtParametroBusquedaCancion.getText()));
                modelTableCanciones.fireTableDataChanged();
                break;
            case 1:
                modelTableCanciones.setCanciones(controladorCanciones.getCancionArtistaListo(txtParametroBusquedaCancion.getText()));
                modelTableCanciones.fireTableDataChanged();
                break;
            case 2:
                modelTableCanciones.setCanciones(controladorCanciones.getCancionGrupoListo(txtParametroBusquedaCancion.getText()));
                modelTableCanciones.fireTableDataChanged();
                break;
            case 3:
                modelTableCanciones.setCanciones(controladorCanciones.getCancionAlbumListo(txtParametroBusquedaCancion.getText()));
                modelTableCanciones.fireTableDataChanged();
                break;
        }
    }//GEN-LAST:event_btnBuscarCancionActionPerformed

    private void txtParametroBusquedaCancionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtParametroBusquedaCancionKeyReleased
        // TODO add your handling code here:
        buscarCliente(txtParametroBusquedaCancion.getText());
    }//GEN-LAST:event_txtParametroBusquedaCancionKeyReleased

    private void txtParametroBusquedaCancionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtParametroBusquedaCancionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtParametroBusquedaCancionActionPerformed

    private void comboParametroBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboParametroBusquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboParametroBusquedaActionPerformed

    private void btnLimpiarCancionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarCancionesActionPerformed
        // TODO add your handling code here:
        gestionCanciones.limpiarCamposCanciones();
    }//GEN-LAST:event_btnLimpiarCancionesActionPerformed

    private void btnTraerCancionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraerCancionesActionPerformed
        // TODO add your handling code here:
        List<Canciones> obtenerCanciones = controladorCanciones.obtenerCanciones();
        CancionesEditar = obtenerCanciones.get(obtenerCanciones.size() - 1);
        txtTitulo.setText(CancionesEditar.getTitulo());
        txtArtista.setText(CancionesEditar.getArtista());
        txtGrupo.setText(CancionesEditar.getGrupo());
        txtAlbum.setText(CancionesEditar.getAlbum());
        jDatePublicacion.setDate(CancionesEditar.getPublicacion());
        txtGenero.setText(CancionesEditar.getGenero());
        txtDuracion.setText(CancionesEditar.getDuracion());
        jDateFechaRegistro.setDate(CancionesEditar.getFechaRegistro());
    }//GEN-LAST:event_btnTraerCancionesActionPerformed

    private void btnEliminarCancionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarCancionesActionPerformed
        if (CancionesEditar != null) {
            if (controladorCanciones.eliminarCancion(CancionesEditar)) {
                JOptionPane.showMessageDialog(rootPane, "Cancion eliminada con éxito del sitema.");
                gestionCanciones.limpiarCamposCanciones();
                actulizarTodalatablaCanciones();
            } else {
                JOptionPane.showMessageDialog(rootPane, "No se puede eliminar la cancion seleccionada.", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "No hay una cancion seleccionada para eliminar.", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarCancionesActionPerformed

    private void btnEditarCancionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarCancionesActionPerformed
        // TODO add your handling code here:
        EditarCanciones();
        List<Canciones> cancion = controladorCanciones.obtenerCanciones();
        modelTableCanciones.setCanciones(cancion);
        modelTableCanciones.fireTableDataChanged();
    }//GEN-LAST:event_btnEditarCancionesActionPerformed

    private void btnGuardarCancionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarCancionesActionPerformed
        // TODO add your handling code here:
        if (controladorCanciones.getCancionTitulo(txtTitulo.getText()) != null) {
            JOptionPane.showMessageDialog(rootPane, "La persona con ese número de cédula ya se encuentra registrada en el sistema.");
        } else {
            Canciones CancionesGuardar = gestionCanciones.guardarEditar(false);
            if (jDateFechaRegistro.getDate() != null) {
                CancionesGuardar.setFechaRegistro(jDateFechaRegistro.getDate());
            }
            if (CancionesGuardar != null) {
                if (controladorCanciones.registrarCancion(CancionesGuardar)) {
                    JOptionPane.showMessageDialog(rootPane, "Persona registrada en el sistema.");
                    gestionCanciones.limpiarCamposCanciones();
                    actulizarTodalatablaCanciones();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "No se puede guardar la persona", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_btnGuardarCancionesActionPerformed

    private void txtDuracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDuracionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDuracionActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        ListaDeCanciones buscar = new ListaDeCanciones(this, true, modelTableCanciones, controladorCanciones);
        buscar.setVisible(true);
    }//GEN-LAST:event_jButton1MouseClicked

    private void txtFechaVentaVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaVentaVentasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFechaVentaVentasActionPerformed

    private void txtProductoVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProductoVentasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductoVentasActionPerformed

    private void txtCedulaoRucClienteVentasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCedulaoRucClienteVentasFocusLost
        // TODO add your handling code here:
        TituloPlaylist();
    }//GEN-LAST:event_txtCedulaoRucClienteVentasFocusLost

    private void txtTituloCancionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTituloCancionFocusGained
        // TODO add your handling code here:
        txtArtistaPlaylist.setText("");
        txtAlbumPlaylist.setText("");
        txtGeneroPlaylist.setText("");
        txtDuracionPlaylist.setText("");
        musicaTituloPlaylist = null;
    }//GEN-LAST:event_txtTituloCancionFocusGained

    private void txtGeneroPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGeneroPlaylistActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGeneroPlaylistActionPerformed
    private Discografica musicaNombreDiscoPlaylist;
    private void txtNombreDiscograficaPlaylistFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreDiscograficaPlaylistFocusLost
        // TODO add your handling code here:
         if (!txtNombreDiscograficaPlaylist.getText().isEmpty()) {
            musicaNombreDiscoPlaylist = controladorDiscografica.getNombreDiscografia(txtNombreDiscograficaPlaylist.getText());
            if (musicaNombreDiscoPlaylist != null) {
             txtCopyPlaylist.setText(String.valueOf(musicaNombreDiscoPlaylist.getCopyright()));
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró la Discografica coon ese nombre", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_txtNombreDiscograficaPlaylistFocusLost

    private void btnAgregarPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarPlaylistActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_btnAgregarPlaylistActionPerformed
    private Canciones musicaTituloPlaylist;

    public void TituloPlaylist() {

        if (!txtTituloCancion.getText().isEmpty()) {
            musicaTituloPlaylist = controladorCanciones.getCancionTitulo(txtTituloCancion.getText());
            if (musicaTituloPlaylist != null) {
                txtArtistaPlaylist.setText(musicaTituloPlaylist.getArtista());
                txtAlbumPlaylist.setText(musicaTituloPlaylist.getAlbum());
                txtGeneroPlaylist.setText(musicaTituloPlaylist.getGenero());
                txtDuracionPlaylist.setText(musicaTituloPlaylist.getDuracion());
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró la discografia con ese nombre", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private Discografica valoresActualizarInventario(Discografica i) {
//        i.setCodProducto(txtInventarioCodProducto.getText());
//        i.setDescripcion(txtInventarioDescripcion.getText());
//        i.setPrecioCompra(txtInventarioPrecioCompra.getText());
//        i.setPrecioVenta(txtInventarioPrecioVenta.getText());
//        i.setCanProductos(txtInventarioCantidadProdcutos.getText());
        return i;
    }

//    void limpiarCamposDiscograficos() {
//        txtNombreDiscografica.setText("");
//        jComboFormatoDiscografica.setSelectedIndex(null);
//        jComboPlataformaDiscografica.setSelectedIndex(null);
//        jComboTipoCompañiaDiscografica.setSelectedIndex(null);
//        jComboCopyDiscografica.setSelectedIndex(null);
//        jDateFechaDiscografica.setCalendar(null);
//    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionMusica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionMusica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionMusica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionMusica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionMusica().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonEliminarPlaylist;
    private javax.swing.JButton ButtonGuardarPlaylist;
    private javax.swing.JButton ButtonListaPlaylist;
    private javax.swing.JTable TablePlaylist;
    private javax.swing.JButton btnAgregarPlaylist;
    private javax.swing.JButton btnBuscarCancion;
    private javax.swing.JButton btnBuscarDiscografica;
    private javax.swing.JButton btnEditarCanciones;
    private javax.swing.JButton btnEditarDiscografica;
    private javax.swing.JButton btnEliminarCanciones;
    private javax.swing.JButton btnEliminarDiscografica;
    private javax.swing.JButton btnGuardarCanciones;
    private javax.swing.JButton btnGuardarDiscografica;
    private javax.swing.JButton btnLimpiarCanciones;
    private javax.swing.JButton btnLimpiarDiscografica;
    private javax.swing.JButton btnTraerCanciones;
    private javax.swing.JButton btnTraerDiscografica;
    private javax.swing.JComboBox<String> comboParametroBusqueda;
    private javax.swing.JComboBox<String> comboParametroBusquedaDiscografica;
    private javax.swing.JComboBox<String> jComboCopyDiscografica;
    private javax.swing.JComboBox<String> jComboFormatoDiscografica;
    private javax.swing.JComboBox<String> jComboPlataformaDiscografica;
    private javax.swing.JComboBox<String> jComboTipoCompañiaDiscografica;
    private com.toedter.calendar.JDateChooser jDateFechaDiscografica;
    private com.toedter.calendar.JDateChooser jDateFechaRegistro;
    private com.toedter.calendar.JDateChooser jDatePublicacion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelPlaylist1;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollCliente;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblApellido;
    private javax.swing.JLabel lblBuscarCancion;
    private javax.swing.JLabel lblCedula;
    private javax.swing.JLabel lblCorreo;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JMenu menuArchivo;
    private javax.swing.JMenuItem menuBuscarPersona;
    private javax.swing.JMenu menuEditar;
    private javax.swing.JMenuBar menuGeneral;
    private javax.swing.JMenuItem menuSalir;
    private javax.swing.JPanel panelCanciones;
    private javax.swing.JPanel panelCuerpoRegistro;
    private javax.swing.JPanel panelDiscografia;
    private javax.swing.JPanel panelPlaylist;
    private javax.swing.JTabbedPane tabCanciones;
    private javax.swing.JTable tablaCliente;
    private javax.swing.JTextField txtAlbum;
    private javax.swing.JTextField txtAlbumPlaylist;
    private javax.swing.JTextField txtArtista;
    private javax.swing.JTextField txtArtistaPlaylist;
    private javax.swing.JTextField txtCopyPlaylist;
    private javax.swing.JTextField txtDuracion;
    private javax.swing.JTextField txtDuracionPlaylist;
    private javax.swing.JTextField txtGenero;
    private javax.swing.JTextField txtGeneroPlaylist;
    private javax.swing.JTextField txtGrupo;
    private javax.swing.JTextField txtNombreDiscografica;
    private javax.swing.JTextField txtNombreDiscograficaPlaylist;
    private javax.swing.JTextField txtNombrePlaylist;
    private javax.swing.JTextField txtParametroBusquedaCancion;
    private javax.swing.JTextField txtParametroBusquedaInventario;
    private javax.swing.JTextField txtTitulo;
    private javax.swing.JTextField txtTituloCancion;
    private javax.swing.JLabel txtTituloCliente;
    private javax.swing.JLabel txtTituloInventario;
    // End of variables declaration//GEN-END:variables

    @Override
    public void clickCanciones(Canciones p) {
        txtTitulo.setText(p.getTitulo());
        txtArtista.setText(p.getArtista());
        txtGrupo.setText(p.getGrupo());
        txtAlbum.setText(p.getAlbum());
        jDatePublicacion.setDate(p.getPublicacion());
        txtGenero.setText(p.getGenero());
        txtDuracion.setText(p.getDuracion());
        jDateFechaRegistro.setDate(p.getFechaRegistro());
        CancionesEditar = p;
    }

    private void buscarCliente(String text) {
//        System.out.println("Text:" + text);
//        System.out.println("ObjetoSelc:" + comboParametroBusqueda.getSelectedIndex());
//        switch (comboParametroBusqueda.getSelectedIndex()) {
//            case 0://Cedula
//                modelTableCanciones.setPersonas(controladorCanciones.getCancionTituloListo(text));
//                modelTableCanciones.fireTableDataChanged();
//                break;
//            case 1://nombre
//                modelTableCanciones.setPersonas(controladorCanciones.getPersonaNombreListo(text));
//                modelTableCanciones.fireTableDataChanged();
//                break;
//            case 2://apellido
//                break;
//        }
    }

    public void clickDiscografica(Discografica i) {
        DiscograficaSeleccionada = i;
        txtNombreDiscografica.setText(i.getNombre());
        jComboFormatoDiscografica.setSelectedIndex(i.getFormato());
        jComboPlataformaDiscografica.setSelectedIndex(i.getPlataforma());
        jComboTipoCompañiaDiscografica.setSelectedIndex(i.getTipoCompañia());
        jComboCopyDiscografica.setSelectedIndex(i.getCopyright());
        jDateFechaDiscografica.setDate(i.getFecha_registro());

    }

    public void clickPlaylist(PlaylistAgregado get) {
        PlaylistAgregarEditar = get;
        txtNombrePlaylist.setText(get.getNombrePlaylist());
        txtTituloCancion.setText(get.getTituloCancion());
        txtArtistaPlaylist.setText(get.getArtistaPlaylist());
        txtAlbumPlaylist.setText(get.getAlbumPlaylist());
        txtGeneroPlaylist.setText(get.getGeneroPlaylist());
        txtDuracionPlaylist.setText(get.getDuracionPlaylist());
        txtNombreDiscograficaPlaylist.setText(get.getNombreDiscograficaPlaylist());
        txtCopyPlaylist.setText(get.getCopyPlaylist());

    }

    @Override
    public void clickDiscogrficas(Discografica p) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void clickPlaylistAgregado(PlaylistAgregado p) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}
